cmake_minimum_required(VERSION 3.16.3)

set(CMAKE_TOOLCHAIN_FILE ${CMAKE_CURRENT_LIST_DIR}/toolchain/tricore-gcc.cmake)
set(LINKER_SCRIPT ${CMAKE_CURRENT_LIST_DIR}/toolchain/Lcf_Gnuc_Tricore_Tc.lsl)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY bin)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_C_STANDARD 99)    # Mostly for LLD

project(scrutiny-aurix-tc334)

include(FetchContent)

set(SCRUTINY_ENABLE_DATALOGGING 1)
set(SCRUTINY_SUPPORT_64BITS 1) 
set(SCRUTINY_DATALOGGING_BUFFER_32BITS 0)

FetchContent_Declare(
  scrutiny-embedded
  GIT_REPOSITORY https://github.com/scrutinydebugger/scrutiny-embedded.git
  GIT_TAG        master
)
FetchContent_MakeAvailable(scrutiny-embedded)

add_subdirectory(bsp)   # Contains drivers and board configuration. Mostly auto generated by Aurix Development Studio

add_executable(${PROJECT_NAME} 
    src/main.cpp
    src/board.cpp
    src/task_controller.cpp
    src/scrutiny_integration.cpp
    )
set_target_properties(${PROJECT_NAME} PROPERTIES SUFFIX ".elf")

target_include_directories(${PROJECT_NAME} PRIVATE 
    src
)

# Infineon iLLD uses of __asm macros in their headers triggers C++11 warnings when we include them in a cpp source. 
target_compile_options(${PROJECT_NAME} PRIVATE -Wno-literal-suffix) 

target_link_libraries(${PROJECT_NAME} PRIVATE 
    bsp
    scrutiny-embedded
    )

# Linker Script
target_link_options(${PROJECT_NAME} PRIVATE -T${LINKER_SCRIPT})
set_target_properties(${PROJECT_NAME} PROPERTIES LINK_DEPENDS ${LINKER_SCRIPT})
set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS -Wl,-Map=${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${PROJECT_NAME}.map)

# Post builds 
# Produce the .hex
add_custom_command(TARGET ${PROJECT_NAME}  POST_BUILD
     DEPENDS ${PROJECT_NAME}.elf
     BYPRODUCTS ${PROJECT_NAME}.hex
     VERBATIM 
     COMMAND ${CMAKE_OBJCOPY} ARGS 
        -O ihex
        "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${PROJECT_NAME}.elf"
        "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${PROJECT_NAME}.hex"
     )

# Produce the .lst
add_custom_command(TARGET ${PROJECT_NAME}  POST_BUILD
     DEPENDS ${PROJECT_NAME}.elf
     BYPRODUCTS ${PROJECT_NAME}.lst
     VERBATIM 
     COMMAND ${CMAKE_OBJDUMP} ARGS
        -h -S 
        "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${PROJECT_NAME}.elf"
        > "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${PROJECT_NAME}.lst"
     )